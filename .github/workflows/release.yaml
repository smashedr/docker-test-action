name: "Release"

on:
  release:
    types: [published]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Debug event.json"
        run: |
          cat "${GITHUB_EVENT_PATH}"

      - name: "Verify Action Tag"
        run: |
          set -e
          echo "Verifying Version TAG in action.yml: ${GITHUB_REF_NAME}"
          echo "image: ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}"
          grep "ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" action.yml

      - name: "Write Version: ${{ github.ref_name }}"
        run: |
          echo "version: ${GITHUB_REF_NAME}"
          echo -n "${GITHUB_REF_NAME}" > src/version.txt

      - name: "Generate Docker Tags"
        id: tags
        uses: smashedr/docker-tags-action@master
        with:
          images: "ghcr.io/${{ github.repository }}"
          tags: ${{ github.ref_name }}

      - name: "Echo Tags"
        run: |
          echo tags:\n'${{ steps.tags.outputs.tags }}'
          echo labels:\n'${{ steps.tags.outputs.labels }}'
          echo annotations:\n'${{ steps.tags.outputs.annotations }}'

      - name: "Docker Login"
        uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v3
      #  with:
      #    platforms: linux/amd64,linux/arm64

      - name: "Build and Push"
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.tags.outputs.labels }}
          annotations: ${{ steps.tags.outputs.labels }}
          #platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Rollback Release"
        if: ${{ failure() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Deleting Release and Tag: ${{ github.ref_name }}"
          gh release delete ${{ github.ref_name }} --cleanup-tag

      - name: "Send Failure Notification"
        if: ${{ failure() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  tags:
    name: "Tags"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    permissions:
      contents: write

    steps:
      - name: "Update Version Tags"
        id: tags
        uses: cssnr/update-version-tags-action@v1

      - name: "Debug Tags"
        continue-on-error: true
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "steps.tags.outputs.tags: ${{ steps.tags.outputs.tags }}"

      - name: "Update Release Notes Action"
        uses: smashedr/update-release-notes-action@master
        continue-on-error: true
        with:
          tags: ${{ steps.tags.outputs.tags }}
          location: tail
