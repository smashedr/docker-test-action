name: "Release"

on:
  release:
    types: [published]

jobs:
  verify:
    name: "Verify"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Verify Action Tag"
        run: |
          set -e
          echo "Verifying Version TAG in action.yaml: ${GITHUB_REF_NAME}"
          echo "image: ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}"
          grep "ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" action.yml

  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [verify]
    permissions:
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Write Version"
        run: |
          echo "version: ${GITHUB_REF_NAME}"
          echo -n "${GITHUB_REF_NAME}" > src/version.txt

      - name: "Generate Docker Tags"
        id: tags
        uses: smashedr/docker-tags-action@master
        with:
          images: "ghcr.io/${{ github.repository }}"
          extra: ${{ github.ref_name }}
          latest: false

      - name: "Echo Tags"
        run: |
          echo "tags: ${{ steps.tags.outputs.tags }}"

      - name: "Docker Login"
        uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v3
      #  with:
      #    platforms: linux/amd64,linux/arm64

      - name: "Build and Push"
        uses: docker/build-push-action@v6
        with:
          context: src
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          #platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  tags:
    name: "Tags"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Update Version Tags"
        id: version
        uses: cssnr/update-version-tags-action@v1

      - name: "Echo Tags"
        run: |
          echo "tags: ${{ steps.version.outputs.tags }}"
